#pragma once

#include <vector>
#include <glm/glm.hpp>
#include <iostream>

struct MeshData
{
    std::vector<float> vertices;
    std::vector<unsigned int> indices;
};

enum MeshShape
{
    CUBE,
    PLANE,
    SPHERE // sphere with radius of 1
};

// Cube mesh data
const MeshData cube = {

    // VERTICES
    {// front face
     -0.5f, -0.5f, 0.5f,
     -0.5f, 0.5f, 0.5f,
     0.5f, 0.5f, 0.5f,
     0.5f, -0.5f, 0.5f,
     // back face
     0.5f, -0.5f, 1.5f,
     0.5f, 0.5f, 1.5f,
     -0.5f, 0.5f, 1.5f,
     -0.5f, -0.5f, 1.5f},

    // INDICES
    {0, 1, 2,
     2, 3, 0,

     // back
     4, 5, 6,
     6, 7, 4,

     // top
     1, 6, 5,
     5, 2, 1,

     // bottom
     0, 7, 4,
     4, 3, 0,

     // right
     3, 2, 5,
     5, 4, 3,

     // left
     7, 6, 1,
     1, 0, 7}};

// sphere with radius 1
// center at (0,0,0) [local origin]
const MeshData sphere = {
    {
        -0.00000004, 1.00000000, 0.00000000,
        -0.00000004, 1.00000000, 0.00000002,
        -0.00000003, 1.00000000, 0.00000003,
        -0.00000002, 1.00000000, 0.00000004,
        0.00000000, 1.00000000, 0.00000004,
        0.00000002, 1.00000000, 0.00000004,
        0.00000003, 1.00000000, 0.00000003,
        0.00000004, 1.00000000, 0.00000002,
        0.00000004, 1.00000000, -0.00000000,
        0.00000004, 1.00000000, -0.00000002,
        0.00000003, 1.00000000, -0.00000003,
        0.00000002, 1.00000000, -0.00000004,
        -0.00000000, 1.00000000, -0.00000004,
        -0.00000002, 1.00000000, -0.00000004,
        -0.00000003, 1.00000000, -0.00000003,
        -0.00000004, 1.00000000, -0.00000002,
        -0.00000004, 1.00000000, 0.00000000,
        0.38268343, 0.92387950, 0.00000000, 
        0.35355338, 0.92387950, -0.14644662,
        0.27059805, 0.92387950, -0.27059805,
        0.14644660, 0.92387950, -0.35355338,
        -0.00000002, 0.92387950, -0.38268343,
        -0.14644665, 0.92387950, -0.35355338,
        -0.27059805, 0.92387950, -0.27059805,
        -0.35355341, 0.92387950, -0.14644654,
        -0.38268343, 0.92387950, 0.00000003,
        -0.35355338, 0.92387950, 0.14644660,
        -0.27059799, 0.92387950, 0.27059808,
        -0.14644650, 0.92387950, 0.35355344,
        0.00000000, 0.92387950, 0.38268343,
        0.14644668, 0.92387950, 0.35355335,
        0.27059814, 0.92387950, 0.27059796,
        0.35355338, 0.92387950, 0.14644660,
        0.38268343, 0.92387950, -0.00000007,
        0.70710677, 0.70710677, 0.00000000,
        0.65328145, 0.70710677, -0.27059805,
        0.49999997, 0.70710677, -0.49999997,
        0.27059805, 0.70710677, -0.65328145,
        -0.00000003, 0.70710677, -0.70710677,
        -0.27059811, 0.70710677, -0.65328145,
        -0.49999997, 0.70710677, -0.49999997,
        -0.65328151, 0.70710677, -0.27059793,
        -0.70710677, 0.70710677, 0.00000006,
        -0.65328145, 0.70710677, 0.27059805,
        -0.49999991, 0.70710677, 0.50000006,
        -0.27059782, 0.70710677, 0.65328157,
        0.00000001, 0.70710677, 0.70710677,
        0.27059817, 0.70710677, 0.65328139,
        0.50000018, 0.70710677, 0.49999982,
        0.65328151, 0.70710677, 0.27059805,
        0.70710677, 0.70710677, -0.00000012,
        0.92387950, 0.38268346, 0.00000000,
        0.85355335, 0.38268346, -0.35355341,
        0.65328145, 0.38268346, -0.65328145,
        0.35355338, 0.38268346, -0.85355335, 
        -0.00000004, 0.38268346, -0.92387950,
        -0.35355344, 0.38268346, -0.85355335,
        -0.65328145, 0.38268346, -0.65328145,
        -0.85355347, 0.38268346, -0.35355324,
        -0.92387950, 0.38268346, 0.00000008,
        -0.85355335, 0.38268346, 0.35355338,
        -0.65328133, 0.38268346, 0.65328157,
        -0.35355309, 0.38268346, 0.85355347,
        0.00000001, 0.38268346, 0.92387950,
        0.35355353, 0.38268346, 0.85355330,
        0.65328169, 0.38268346, 0.65328121,
        0.85355341, 0.38268346, 0.35355338,
        0.92387950, 0.38268346, -0.00000016,
        1.00000000, 0.00000000, 0.00000000,
        0.92387950, 0.00000000, -0.38268346,
        0.70710677, 0.00000000, -0.70710677,
        0.38268343, 0.00000000, -0.92387950,
        -0.00000004, 0.00000000, -1.00000000,
        -0.38268352, 0.00000000, -0.92387950,
        -0.70710677, 0.00000000, -0.70710677,
        -0.92387962, 0.00000000, -0.38268328,
        -1.00000000, 0.00000000, 0.00000009,
        -0.92387950, 0.00000000, 0.38268343,
        -0.70710665, 0.00000000, 0.70710689,
        -0.38268313, 0.00000000, 0.92387968,
        0.00000001, 0.00000000, 1.00000000,
        0.38268360, 0.00000000, 0.92387944,
        0.70710701, 0.00000000, 0.70710653,
        0.92387956, 0.00000000, 0.38268343,
        1.00000000, 0.00000000, -0.00000017,
        0.92387950, -0.38268346, 0.00000000,
        0.85355335, -0.38268346, -0.35355341,
        0.65328145, -0.38268346, -0.65328145,
        0.35355338, -0.38268346, -0.85355335,
        -0.00000004, -0.38268346, -0.92387950,
        -0.35355344, -0.38268346, -0.85355335,
        -0.65328145, -0.38268346, -0.65328145, 
        -0.85355347, -0.38268346, -0.35355324,
        -0.92387950, -0.38268346, 0.00000008,
        -0.85355335, -0.38268346, 0.35355338,
        -0.65328133, -0.38268346, 0.65328157,
        -0.35355309, -0.38268346, 0.85355347,
        0.00000001, -0.38268346, 0.92387950,
        0.35355353, -0.38268346, 0.85355330,
        0.65328169, -0.38268346, 0.65328121,
        0.85355341, -0.38268346, 0.35355338,
        0.92387950, -0.38268346, -0.00000016,
        0.70710683, -0.70710677, 0.00000000,
        0.65328151, -0.70710677, -0.27059808,
        0.50000000, -0.70710677, -0.50000000,
        0.27059805, -0.70710677, -0.65328151,
        -0.00000003, -0.70710677, -0.70710683,
        -0.27059811, -0.70710677, -0.65328151,
        -0.50000000, -0.70710677, -0.50000000,
        -0.65328157, -0.70710677, -0.27059796,
        -0.70710683, -0.70710677, 0.00000006,
        -0.65328151, -0.70710677, 0.27059805,
        -0.49999994, -0.70710677, 0.50000012,
        -0.27059785, -0.70710677, 0.65328163,
        0.00000001, -0.70710677, 0.70710683,
        0.27059820, -0.70710677, 0.65328145,
        0.50000018, -0.70710677, 0.49999985,
        0.65328157, -0.70710677, 0.27059805,
        0.70710683, -0.70710677, -0.00000012,
        0.38268331, -0.92387956, 0.00000000,
        0.35355327, -0.92387956, -0.14644657,
        0.27059796, -0.92387956, -0.27059796,
        0.14644656, -0.92387956, -0.35355327,
        -0.00000002, -0.92387956, -0.38268331,
        -0.14644660, -0.92387956, -0.35355327,
        -0.27059796, -0.92387956, -0.27059796,
        -0.35355330, -0.92387956, -0.14644650,
        -0.38268331, -0.92387956, 0.00000003,
        -0.35355327, -0.92387956, 0.14644656, 
        -0.27059790, -0.92387956, 0.27059799,
        -0.14644645, -0.92387956, 0.35355332,
        0.00000000, -0.92387956, 0.38268331,
        0.14644663, -0.92387956, 0.35355324,
        0.27059805, -0.92387956, 0.27059788,
        0.35355330, -0.92387956, 0.14644656,
        0.38268331, -0.92387956, -0.00000007,
        -0.00000004, -1.00000000, 0.00000000,
        -0.00000004, -1.00000000, 0.00000002,
        -0.00000003, -1.00000000, 0.00000003,
        -0.00000002, -1.00000000, 0.00000004,
        0.00000000, -1.00000000, 0.00000004,
        0.00000002, -1.00000000, 0.00000004,
        0.00000003, -1.00000000, 0.00000003,
        0.00000004, -1.00000000, 0.00000002,
        0.00000004, -1.00000000, -0.00000000,
        0.00000004, -1.00000000, -0.00000002,
        0.00000003, -1.00000000, -0.00000003,
        0.00000002, -1.00000000, -0.00000004,
        -0.00000000, -1.00000000, -0.00000004,
        -0.00000002, -1.00000000, -0.00000004,
        -0.00000003, -1.00000000, -0.00000003,
        -0.00000004, -1.00000000, -0.00000002,
        -0.00000004, -1.00000000, 0.00000000
    },
    {
        1, 17, 18, 
        2, 18, 19, 
        3, 19, 20, 
        4, 20, 21, 
        5, 21, 22, 
        6, 22, 23, 
        7, 23, 24, 
        8, 24, 25, 
        9, 25, 26, 
        10, 26, 27, 
        11, 27, 28, 
        12, 28, 29, 
        13, 29, 30, 
        14, 30, 31, 
        15, 31, 32, 
        16, 32, 33, 
        17, 34, 18, 
        18, 34, 35, 
        18, 35, 19, 
        19, 35, 36, 
        19, 36, 20,
        20, 36, 37,
        20, 37, 21,
        21, 37, 38,
        21, 38, 22,
        22, 38, 39,
        22, 39, 23,
        23, 39, 40,
        23, 40, 24,
        24, 40, 41,
        24, 41, 25,
        25, 41, 42,
        25, 42, 26,
        26, 42, 43,
        26, 43, 27,
        27, 43, 44,
        27, 44, 28,
        28, 44, 45,
        28, 45, 29,
        29, 45, 46, 
        29, 46, 30,
        30, 46, 47,
        30, 47, 31,
        31, 47, 48,
        31, 48, 32,
        32, 48, 49,
        32, 49, 33,
        33, 49, 50,
        34, 51, 35,
        35, 51, 52,
        35, 52, 36,
        36, 52, 53,
        36, 53, 37,
        37, 53, 54,
        37, 54, 38,
        38, 54, 55,
        38, 55, 39,
        39, 55, 56,
        39, 56, 40,
        40, 56, 57,
        40, 57, 41,
        41, 57, 58,
        41, 58, 42,
        42, 58, 59,
        42, 59, 43,
        43, 59, 60,
        43, 60, 44,
        44, 60, 61,
        44, 61, 45,
        45, 61, 62,
        45, 62, 46,
        46, 62, 63,
        46, 63, 47,
        47, 63, 64,
        47, 64, 48,
        48, 64, 65,
        48, 65, 49,
        49, 65, 66,
        49, 66, 50,
        50, 66, 67,
        51, 68, 52, 
        52, 68, 69,
        52, 69, 53,
        53, 69, 70,
        53, 70, 54,
        54, 70, 71,
        54, 71, 55,
        55, 71, 72,
        55, 72, 56,
        56, 72, 73,
        56, 73, 57,
        57, 73, 74,
        57, 74, 58,
        58, 74, 75,
        58, 75, 59,
        59, 75, 76,
        59, 76, 60,
        60, 76, 77,
        60, 77, 61,
        61, 77, 78,
        61, 78, 62,
        62, 78, 79,
        62, 79, 63,
        63, 79, 80,
        63, 80, 64,
        64, 80, 81,
        64, 81, 65,
        65, 81, 82,
        65, 82, 66,
        66, 82, 83,
        66, 83, 67,
        67, 83, 84,
        68, 85, 69,
        69, 85, 86,
        69, 86, 70,
        70, 86, 87,
        70, 87, 71,
        71, 87, 88,
        71, 88, 72,
        72, 88, 89, 
        72, 89, 73,
        73, 89, 90,
        73, 90, 74,
        74, 90, 91,
        74, 91, 75,
        75, 91, 92,
        75, 92, 76,
        76, 92, 93,
        76, 93, 77,
        77, 93, 94,
        77, 94, 78,
        78, 94, 95,
        78, 95, 79,
        79, 95, 96,
        79, 96, 80,
        80, 96, 97,
        80, 97, 81,
        81, 97, 98,
        81, 98, 82,
        82, 98, 99,
        82, 99, 83,
        83, 99, 100,
        83, 100, 84,
        84, 100, 101,
        85, 102, 86,
        86, 102, 103,
        86, 103, 87,
        87, 103, 104,
        87, 104, 88,
        88, 104, 105,
        88, 105, 89,
        89, 105, 106,
        89, 106, 90,
        90, 106, 107,
        90, 107, 91,
        91, 107, 108,
        91, 108, 92,
        92, 108, 109,
        92, 109, 93,
        93, 109, 110,
        93, 110, 94, 
        94, 110, 111,
        94, 111, 95,
        95, 111, 112,
        95, 112, 96,
        96, 112, 113,
        96, 113, 97,
        97, 113, 114,
        97, 114, 98,
        98, 114, 115,
        98, 115, 99,
        99, 115, 116,
        99, 116, 100,
        100, 116, 117,
        100, 117, 101,
        101, 117, 118,
        102, 119, 103,
        103, 119, 120,
        103, 120, 104,
        104, 120, 121,
        104, 121, 105,
        105, 121, 122,
        105, 122, 106,
        106, 122, 123,
        106, 123, 107,
        107, 123, 124,
        107, 124, 108,
        108, 124, 125,
        108, 125, 109,
        109, 125, 126,
        109, 126, 110,
        110, 126, 127,
        110, 127, 111,
        111, 127, 128,
        111, 128, 112,
        112, 128, 129,
        112, 129, 113,
        113, 129, 130,
        113, 130, 114, 
        114, 130, 131,
        114, 131, 115,
        115, 131, 132,
        115, 132, 116,
        116, 132, 133,
        116, 133, 117,
        117, 133, 134,
        117, 134, 118,
        118, 134, 135,
        119, 136, 120,
        120, 137, 121,
        121, 138, 122,
        122, 139, 123,
        123, 140, 124,
        124, 141, 125,
        125, 142, 126,
        126, 143, 127,
        127, 144, 128,
        128, 145, 129,
        129, 146, 130,
        130, 147, 131,
        131, 148, 132,
        132, 149, 133,
        133, 150, 134, 
        134, 151, 135
    }
};

class BaseObject
{
public:
    BaseObject(MeshShape shape, glm::vec4 color)
    {
        switch (shape)
        {
        case CUBE:
            mesh_data = cube;
            break;
        case SPHERE:
            mesh_data = sphere;
            break;
        default:
            mesh_data = cube;
            break;
        }
        mesh_color = color;

        position = glm::vec3(1.0f);
    }

    MeshData mesh_data;
    glm::vec4 mesh_color;
    glm::vec3 position;

    void translate(glm::vec3 v)
    {
        position += v;
    }

    void loadToBuffer(std::vector<float> &vertList)
    {
        for (int i = 0; i < mesh_data.vertices.size(); i++)
        {
            vertList.push_back(mesh_data.vertices[i]);
            if (i % 3 == 2)
            {
                vertList.insert(vertList.end(), {mesh_color.r, mesh_color.g, mesh_color.b, mesh_color.a});
            }
        }
    }
};